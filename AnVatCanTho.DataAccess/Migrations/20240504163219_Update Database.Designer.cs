// <auto-generated />
using System;
using AnVatCanTho.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnVatCanTho.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240504163219_Update Database")]
    partial class UpdateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AnVatCanTho.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_Id");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("District_Name");

                    b.Property<string>("NoAndStreet")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("NoAndStreet");

                    b.Property<int?>("SnackBarId")
                        .HasColumnType("int")
                        .HasColumnName("SnackBar_Id");

                    b.Property<string>("WardName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ward_Name");

                    b.HasKey("Id");

                    b.HasIndex("WardName", "DistrictName");

                    b.HasIndex(new[] { "Id" }, "ADDRESS_PK")
                        .IsUnique();

                    b.HasIndex(new[] { "DistrictName", "WardName" }, "AddressBelongToWard_FK");

                    b.HasIndex(new[] { "CustomerId" }, "CustomerHasAddress_FK");

                    b.HasIndex(new[] { "SnackBarId" }, "SnackBarHasAddress_FK");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            DistrictName = "Ninh Kiều",
                            NoAndStreet = "3/2",
                            WardName = "Xuân Khánh"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            DistrictName = "Ninh Kiều",
                            NoAndStreet = "3/2",
                            WardName = "Xuân Khánh"
                        },
                        new
                        {
                            Id = 3,
                            DistrictName = "Cái Răng",
                            NoAndStreet = "Lý Thái Tổ",
                            SnackBarId = 1,
                            WardName = "Lê Bình"
                        },
                        new
                        {
                            Id = 4,
                            DistrictName = "Cái Răng",
                            NoAndStreet = "Trần Văn Trà",
                            SnackBarId = 2,
                            WardName = "Lê Bình"
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Avatar")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasDefaultValue("no-avatar.jpg")
                        .HasColumnName("Avatar");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("City");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Display_Name");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("Password");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Tel")
                        .IsFixedLength();

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "ADMINISTRATOR_PK")
                        .IsUnique();

                    b.HasIndex(new[] { "RoleId" }, "AdministratorHasRole_FK");

                    b.ToTable("Administrators");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "NA",
                            DisplayName = "Admin",
                            Dob = new DateTime(2024, 5, 4, 23, 32, 18, 79, DateTimeKind.Local).AddTicks(6531),
                            Email = "admin@site.com",
                            Password = "$2a$11$UPoZ.Ztsf3CRUflzBtJjCevf/OyT6HMq0OD6qsc/h.9WtRSszadJ.",
                            RoleId = 1,
                            Tel = "NA",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Address");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<int>("Total")
                        .HasColumnType("int")
                        .HasColumnName("Total");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "BILL_PK")
                        .IsUnique();

                    b.HasIndex(new[] { "OrderId" }, "BillOfOrder_FK");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("Content");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_Id");

                    b.Property<int?>("LikeQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("LikeQuantity");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_Id");

                    b.Property<int>("SnackBarId")
                        .HasColumnType("int")
                        .HasColumnName("SnackBar_Id");

                    b.HasKey("Id");

                    b.HasIndex("ProductId", "SnackBarId");

                    b.HasIndex(new[] { "Id" }, "COMMENT_PK")
                        .IsUnique();

                    b.HasIndex(new[] { "SnackBarId", "ProductId" }, "CommentOfProduct_FK");

                    b.HasIndex(new[] { "CustomerId" }, "CustomerHasComment_FK");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Ngon nha",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            ProductId = 1,
                            SnackBarId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "10 điểm",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            ProductId = 2,
                            SnackBarId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "Cũng ngon",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            ProductId = 5,
                            SnackBarId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Hơi bị ngon luôn",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            ProductId = 3,
                            SnackBarId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Món này ăn hơi bị dính",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 1,
                            ProductId = 4,
                            SnackBarId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "Gà giòn rụm luôn",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            ProductId = 6,
                            SnackBarId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "Tuyệt vời",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            ProductId = 7,
                            SnackBarId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Nice",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 2,
                            ProductId = 8,
                            SnackBarId = 2
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Avatar")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasDefaultValue("no-avatar.jpg")
                        .HasColumnName("Avatar");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Display_Name");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("Password");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Tel")
                        .IsFixedLength();

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "CUSTOMER_PK")
                        .IsUnique();

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avatar = "user1.jpg",
                            DisplayName = "NVA",
                            Dob = new DateTime(2024, 5, 4, 23, 32, 17, 894, DateTimeKind.Local).AddTicks(7859),
                            Email = "nva@gmail.com",
                            Password = "$2a$11$ejxPo.CKT/J8547sVYno1OpDw.7jPqyP2JrtAKqfShXROBInyeXx6",
                            Tel = "0123456789",
                            Username = "Nguyễn Văn A"
                        },
                        new
                        {
                            Id = 2,
                            Avatar = "user2.jpg",
                            DisplayName = "NVB",
                            Dob = new DateTime(2024, 5, 4, 23, 32, 18, 79, DateTimeKind.Local).AddTicks(5632),
                            Email = "nvb@gmail.com",
                            Password = "$2a$11$Rz9EkH/5QMa9WFYcnwu1Uu12SPQ2kiN7O2jfu1cigqimLgt0AL6qy",
                            Tel = "0223456789",
                            Username = "Nguyễn Văn B"
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.District", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Name");

                    b.HasIndex(new[] { "Name" }, "DISTRICT_PK")
                        .IsUnique();

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            Name = "Ninh Kiều"
                        },
                        new
                        {
                            Name = "Cái Răng"
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Address");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_Id");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status");

                    b.Property<int>("Total")
                        .HasColumnType("int")
                        .HasColumnName("Total");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CustomerId" }, "CustomerHasOrders_FK");

                    b.HasIndex(new[] { "Id" }, "ORDER_PK")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AnVatCanTho.Models.OrderDetail", b =>
                {
                    b.Property<int>("SnackBarId")
                        .HasColumnType("int")
                        .HasColumnName("SnackBar_Id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_Id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("Price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.HasKey("SnackBarId", "ProductId", "OrderId");

                    b.HasIndex("ProductId", "SnackBarId");

                    b.HasIndex(new[] { "OrderId" }, "OrderDetailOfOrder_FK");

                    b.HasIndex(new[] { "SnackBarId", "ProductId" }, "OrderDetailOfProduct_FK");

                    b.ToTable("Order_Details", (string)null);
                });

            modelBuilder.Entity("AnVatCanTho.Models.Product", b =>
                {
                    b.Property<int>("SnackBarId")
                        .HasColumnType("int")
                        .HasColumnName("SnackBar_Id");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("Description");

                    b.Property<string>("Ingredient")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("Ingredient");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("ProductCategory_Id");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("Stock");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int")
                        .HasColumnName("UnitPrice");

                    b.HasKey("SnackBarId", "Id");

                    b.HasIndex(new[] { "SnackBarId", "Id" }, "PRODUCT_PK")
                        .IsUnique();

                    b.HasIndex(new[] { "ProductCategoryId" }, "ProductOfProductCategory_FK");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            SnackBarId = 2,
                            Id = 2,
                            Description = "Khoai tây chiên là một món ăn phổ biến trên khắp thế giới, được làm từ khoai tây cắt thành dạng que hoặc thanh, sau đó chiên giòn trong dầu. Khoai tây chiên có bề mặt giòn vàng, bên trong mềm mịn, và thường được ăn kèm với sốt cà chua, sốt mayonnaise, hoặc sốt bơ.",
                            Ingredient = "NA",
                            Name = "Khoai tây chiên",
                            ProductCategoryId = 3,
                            Stock = 1,
                            UnitPrice = 15
                        },
                        new
                        {
                            SnackBarId = 1,
                            Id = 1,
                            Description = "Sinh tố bơ là một đồ uống mát lạnh và bổ dưỡng, được làm từ quả bơ chín mọng, sữa tươi hoặc sữa dừa, đường hoặc mật ong, và một chút đá xay nhuyễn. Đây là một lựa chọn tuyệt vời cho những người yêu thích hương vị độc đáo và chất dinh dưỡng của quả bơ. Sinh tố bơ có màu xanh đậm tự nhiên, với hương thơm béo ngậy của quả bơ kết hợp với sự ngọt ngào của sữa và đường.",
                            Ingredient = "NA",
                            Name = "Sinh tố bơ",
                            ProductCategoryId = 2,
                            Stock = 1,
                            UnitPrice = 15
                        },
                        new
                        {
                            SnackBarId = 2,
                            Id = 6,
                            Description = "Gà rán là một món ăn phổ biến trên toàn thế giới, được biết đến với bề mặt ngoài giòn vàng và thịt gà mềm mịn bên trong. Món gà này thường được chế biến bằng cách ngâm trong một hỗn hợp gia vị, sau đó được chiên hoặc nướng cho đến khi thịt chín và bề mặt trở nên giòn và vàng ươm. Gà rán có hương vị đậm đà, béo ngậy từ dầu và gia vị, cùng với vị ngọt tự nhiên của thịt gà.",
                            Ingredient = "NA",
                            Name = "Gà rán",
                            ProductCategoryId = 3,
                            Stock = 1,
                            UnitPrice = 20
                        },
                        new
                        {
                            SnackBarId = 1,
                            Id = 5,
                            Description = "Trà đào cam sả là một đồ uống tươi mát và sảng khoái, kết hợp giữa hương vị ngọt ngào của đào, chua nhẹ của cam, và hương thơm dễ chịu của sả. Món này thường được làm từ trà đen hoặc trà xanh pha loãng kèm theo nước ép đào, nước cam tươi và một ít nước ép sả.",
                            Ingredient = "NA",
                            Name = "Trà đào cam sả",
                            ProductCategoryId = 1,
                            Stock = 1,
                            UnitPrice = 15
                        },
                        new
                        {
                            SnackBarId = 1,
                            Id = 3,
                            Description = "Gỏi cuốn, hay còn gọi là spring roll, là một món ăn truyền thống của Việt Nam, được biết đến với vị ngon, hương thơm, và sự tươi mát. Món này thường được làm từ các nguyên liệu tự nhiên và giàu dinh dưỡng như thịt gà hoặc tôm, rau sống, và các loại rau củ khác nhau, được cuốn trong một tờ bánh tráng mềm mịn và mỏng như giấy.",
                            Ingredient = "NA",
                            Name = "Gỏi cuốn",
                            ProductCategoryId = 4,
                            Stock = 1,
                            UnitPrice = 10
                        },
                        new
                        {
                            SnackBarId = 1,
                            Id = 4,
                            Description = "Món chân gà sốt Thái là một món ăn hấp dẫn và đậm đà, kết hợp giữa sự ngọt của sốt Thái và độ giòn của chân gà. Món này thường được chế biến bằng cách chiên hoặc nướng chân gà cho đến khi chúng giòn vàng, sau đó được tẩm sốt Thái thơm ngon.",
                            Ingredient = "NA",
                            Name = "Chân gà sốt thái",
                            ProductCategoryId = 3,
                            Stock = 1,
                            UnitPrice = 30
                        },
                        new
                        {
                            SnackBarId = 2,
                            Id = 7,
                            Description = "Trà chanh giã tay là một đồ uống tươi mát và sảng khoái, được làm từ trà đen hoặc trà xanh pha loãng kèm với chanh và đường, được giã tay hoặc lắc đều để hòa quện hương vị. Đây là một món uống phổ biến, đặc biệt vào mùa hè, khi hương vị chua cay và ngọt ngào của trà chanh giã tay mang lại cảm giác sảng khoái và giải khát.",
                            Ingredient = "NA",
                            Name = "Trà chanh giã tay",
                            ProductCategoryId = 1,
                            Stock = 1,
                            UnitPrice = 20
                        },
                        new
                        {
                            SnackBarId = 2,
                            Id = 8,
                            Description = "Trà mãng cầu là một loại đồ uống tươi mát và bổ dưỡng, được làm từ lá mãng cầu tươi hoặc lá mãng cầu khô, kết hợp với nước sôi và đường hoặc mật ong để tạo ra một hương vị độc đáo và thơm ngon. Món này thường được thưởng thức nóng hoặc lạnh, tùy thuộc vào sở thích cá nhân.",
                            Ingredient = "NA",
                            Name = "Trà mãng cầu",
                            ProductCategoryId = 1,
                            Stock = 1,
                            UnitPrice = 20
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ProductType_Id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "PRODUCT_CATEGORY_PK")
                        .IsUnique();

                    b.HasIndex(new[] { "ProductTypeId" }, "ProductCategoryOfProductType_FK");

                    b.ToTable("Product_Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Description = "Description",
                            Name = "Sinh tố",
                            ProductTypeId = 1
                        },
                        new
                        {
                            Id = 1,
                            Description = "Description",
                            Name = "Trà",
                            ProductTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description",
                            Name = "Thức ăn nhanh",
                            ProductTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description",
                            Name = "Thức ăn lành mạnh",
                            ProductTypeId = 2
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.ProductImage", b =>
                {
                    b.Property<string>("PathName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Path_Name");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_Id");

                    b.Property<int>("SnackBarId")
                        .HasColumnType("int")
                        .HasColumnName("SnackBar_Id");

                    b.HasKey("PathName");

                    b.HasIndex("ProductId", "SnackBarId");

                    b.HasIndex(new[] { "PathName" }, "PRODUCT_IMAGE_PK")
                        .IsUnique();

                    b.HasIndex(new[] { "SnackBarId", "ProductId" }, "ProductHasImage_FK");

                    b.ToTable("Product_Images", (string)null);

                    b.HasData(
                        new
                        {
                            PathName = "MBGvAbfLEI-khoai-tay-chien-01.jpg",
                            ProductId = 2,
                            SnackBarId = 2
                        },
                        new
                        {
                            PathName = "18Arx7CbQe-sinh-to-bo-01.jpg",
                            ProductId = 1,
                            SnackBarId = 1
                        },
                        new
                        {
                            PathName = "tra-dao-cam-sa.jpg",
                            ProductId = 5,
                            SnackBarId = 1
                        },
                        new
                        {
                            PathName = "goi-cuon.jpg",
                            ProductId = 3,
                            SnackBarId = 1
                        },
                        new
                        {
                            PathName = "chan-ga-sot-thai.jpg",
                            ProductId = 4,
                            SnackBarId = 1
                        },
                        new
                        {
                            PathName = "Wneqo25aPU-ga-ran-01.jpg",
                            ProductId = 6,
                            SnackBarId = 2
                        },
                        new
                        {
                            PathName = "tra-chanh-gia-tay.jpg",
                            ProductId = 7,
                            SnackBarId = 2
                        },
                        new
                        {
                            PathName = "Tra-Mang-Cau.png",
                            ProductId = 8,
                            SnackBarId = 2
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "PRODUCT_TYPE_PK")
                        .IsUnique();

                    b.ToTable("Product_Types", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Thức uống"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Thức ăn"
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.Rating", b =>
                {
                    b.Property<int>("SnackBarId")
                        .HasColumnType("int")
                        .HasColumnName("SnackBar_Id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_Id");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("Customer_Id");

                    b.Property<double>("Star")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("Star");

                    b.HasKey("SnackBarId", "ProductId", "CustomerId");

                    b.HasIndex(new[] { "CustomerId" }, "DetailRatingOfCustomer_FK");

                    b.HasIndex(new[] { "ProductId", "SnackBarId" }, "DetailRatingofProduct_FK");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            SnackBarId = 1,
                            ProductId = 1,
                            CustomerId = 1,
                            Star = 3.0
                        },
                        new
                        {
                            SnackBarId = 2,
                            ProductId = 2,
                            CustomerId = 2,
                            Star = 4.0
                        },
                        new
                        {
                            SnackBarId = 1,
                            ProductId = 5,
                            CustomerId = 1,
                            Star = 4.0
                        },
                        new
                        {
                            SnackBarId = 1,
                            ProductId = 3,
                            CustomerId = 1,
                            Star = 3.0
                        },
                        new
                        {
                            SnackBarId = 1,
                            ProductId = 4,
                            CustomerId = 1,
                            Star = 5.0
                        },
                        new
                        {
                            SnackBarId = 2,
                            ProductId = 6,
                            CustomerId = 2,
                            Star = 4.0
                        },
                        new
                        {
                            SnackBarId = 2,
                            ProductId = 7,
                            CustomerId = 2,
                            Star = 3.0
                        },
                        new
                        {
                            SnackBarId = 2,
                            ProductId = 8,
                            CustomerId = 2,
                            Star = 5.0
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Name");

                    b.Property<string>("Permission")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Permission");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "ROLE_PK")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Administrator",
                            Permission = "all"
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.SnackBar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Avatar")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasDefaultValue("no-avatar.jpg")
                        .HasColumnName("Avatar");

                    b.Property<string>("CoverImage")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasDefaultValue("no-image.jpg")
                        .HasColumnName("CoverImage");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("Description");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Display_Name");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)")
                        .HasColumnName("Password");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("Tel")
                        .IsFixedLength();

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "SNACK_BAR_PK")
                        .IsUnique();

                    b.ToTable("Snack_Bars", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Quán ăn vặt cho sinh viên nổi tiếng bậc nhất Cần Thơ",
                            DisplayName = "Ăn vật Sinh Viên",
                            Dob = new DateTime(2024, 5, 4, 23, 32, 18, 477, DateTimeKind.Local).AddTicks(4922),
                            Email = "snackbar1@site.com",
                            Password = "$2a$11$UuZVLnOEql45FgLyOhhb6ucvPRqSsvSwOyAuR60.zwK98wtMgs4mi",
                            Tel = "0312345678",
                            Username = "snackbar1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Quán ăn vặt hút khách ở Cần Thơ",
                            DisplayName = "Quán Hồi Đó",
                            Dob = new DateTime(2024, 5, 4, 23, 32, 18, 657, DateTimeKind.Local).AddTicks(2235),
                            Email = "snackbar2@site.com",
                            Password = "$2a$11$81lUZ2mTt3JgH4MPdTqyWeDSt2MVLLYPFqhedmmhNpGmR0U2Y8kxu",
                            Tel = "0312345678",
                            Username = "snackbar2"
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.Ward", b =>
                {
                    b.Property<string>("DistrictName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("District_Name");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("DistrictName", "Name");

                    b.HasIndex(new[] { "DistrictName", "Name" }, "WARD_PK")
                        .IsUnique();

                    b.ToTable("Wards");

                    b.HasData(
                        new
                        {
                            DistrictName = "Ninh Kiều",
                            Name = "Xuân Khánh"
                        },
                        new
                        {
                            DistrictName = "Ninh Kiều",
                            Name = "An Cư"
                        },
                        new
                        {
                            DistrictName = "Cái Răng",
                            Name = "Lê Bình"
                        },
                        new
                        {
                            DistrictName = "Cái Răng",
                            Name = "Tân Phú"
                        });
                });

            modelBuilder.Entity("AnVatCanTho.Models.Address", b =>
                {
                    b.HasOne("AnVatCanTho.Models.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId");

                    b.HasOne("AnVatCanTho.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnVatCanTho.Models.SnackBar", "SnackBar")
                        .WithMany("Addresses")
                        .HasForeignKey("SnackBarId");

                    b.HasOne("AnVatCanTho.Models.Ward", "Ward")
                        .WithMany("Addresses")
                        .HasForeignKey("WardName", "DistrictName")
                        .HasPrincipalKey("Name", "DistrictName");

                    b.Navigation("Customer");

                    b.Navigation("District");

                    b.Navigation("SnackBar");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Administrator", b =>
                {
                    b.HasOne("AnVatCanTho.Models.Role", "Role")
                        .WithMany("Administrators")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Bill", b =>
                {
                    b.HasOne("AnVatCanTho.Models.Order", "Order")
                        .WithMany("Bills")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Comment", b =>
                {
                    b.HasOne("AnVatCanTho.Models.Customer", "Customer")
                        .WithMany("Comments")
                        .HasForeignKey("CustomerId");

                    b.HasOne("AnVatCanTho.Models.SnackBar", "SnackBar")
                        .WithMany()
                        .HasForeignKey("SnackBarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnVatCanTho.Models.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId", "SnackBarId")
                        .HasPrincipalKey("Id", "SnackBarId");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("SnackBar");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Order", b =>
                {
                    b.HasOne("AnVatCanTho.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AnVatCanTho.Models.OrderDetail", b =>
                {
                    b.HasOne("AnVatCanTho.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnVatCanTho.Models.SnackBar", "SnackBar")
                        .WithMany()
                        .HasForeignKey("SnackBarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnVatCanTho.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId", "SnackBarId")
                        .HasPrincipalKey("Id", "SnackBarId");

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("SnackBar");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Product", b =>
                {
                    b.HasOne("AnVatCanTho.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnVatCanTho.Models.SnackBar", "SnackBar")
                        .WithMany("Products")
                        .HasForeignKey("SnackBarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");

                    b.Navigation("SnackBar");
                });

            modelBuilder.Entity("AnVatCanTho.Models.ProductCategory", b =>
                {
                    b.HasOne("AnVatCanTho.Models.ProductType", "ProductType")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("AnVatCanTho.Models.ProductImage", b =>
                {
                    b.HasOne("AnVatCanTho.Models.SnackBar", "SnackBar")
                        .WithMany()
                        .HasForeignKey("SnackBarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnVatCanTho.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId", "SnackBarId")
                        .HasPrincipalKey("Id", "SnackBarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SnackBar");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Rating", b =>
                {
                    b.HasOne("AnVatCanTho.Models.Customer", "Customer")
                        .WithMany("Ratings")
                        .HasForeignKey("CustomerId");

                    b.HasOne("AnVatCanTho.Models.SnackBar", "SnackBar")
                        .WithMany()
                        .HasForeignKey("SnackBarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnVatCanTho.Models.Product", "Product")
                        .WithMany("Ratings")
                        .HasForeignKey("ProductId", "SnackBarId")
                        .HasPrincipalKey("Id", "SnackBarId");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("SnackBar");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Ward", b =>
                {
                    b.HasOne("AnVatCanTho.Models.District", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Comments");

                    b.Navigation("Orders");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("AnVatCanTho.Models.District", b =>
                {
                    b.Navigation("Wards");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Order", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Product", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductImages");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("AnVatCanTho.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AnVatCanTho.Models.ProductType", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Role", b =>
                {
                    b.Navigation("Administrators");
                });

            modelBuilder.Entity("AnVatCanTho.Models.SnackBar", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("AnVatCanTho.Models.Ward", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
